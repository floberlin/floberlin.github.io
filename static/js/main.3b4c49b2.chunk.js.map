{"version":3,"sources":["pages/Asset.js","pages/QR.js","pages/Error.js","pages/Account.js","App.js","serviceWorker.js","index.js"],"names":["assetipfs","containerStyle","width","height","center","lat","lng","a","axios","get","transMinting","data","result","getTokenId","then","id","toString","substr","i","index","Date","parseInt","timeStamp","toLocaleString","topics","json","DATE","ADDRESS","transTransfer","filter","asset","FROM","TO","push","url","window","location","href","split","assign","JSON","stringify","timelineGetter","item","x","fromtodate","e","App","useState","setAsset","ipfsID","setIpfsID","timer","setTimer","coor","cevent","setCevent","ceventTrans","setCeventTrans","details","setDetails","useEffect","getAsset","parse","getLogs_mint","d","getLogs_transfer","setTimeout","clearTimeout","useJsApiLoader","googleMapsApiKey","mapIds","isLoaded","ThemeProvider","style","MessageStrip","design","hideCloseButton","className","Card","header","AnalyticalCardHeader","arrowIndicator","counter","counterState","target","deviation","long","description","indicatorState","subtitleText","titleText","unit","value","co2","onClick","display","Table","TableRow","TableCell","Label","alt","mdxtype","originaltype","src","image","mapContainerStyle","zoom","Timeline","slot","tooltip","TimelineItem","icon","addrMapping","type","color","timeout","QR","state","handleScan","setState","handleError","err","console","error","delay","onError","this","onScan","Component","mdxType","originalType","seed","size","scale","bgColor","spotColor","provider","signer","address","roProvidernoUser","ethers","providers","JsonRpcProvider","magentaDAO","Contract","abi","roProvider","WalletConnectProvider","rpc","isMobile","enable","Web3Provider","ethereum","send","getSigner","getAddress","log","ipfsId","rslt","toNumber","setValue","userAddress","setuserAddress","menu","setMenu","profile","setProfile","ShellBar","logo","onLogoClick","onMenuItemClick","overflow","onProfileClick","Avatar","colorScheme","shape","SideNavigation","fixedItems","SideNavigationItem","text","onSelectionChange","ethersConnect","substring","slice","onChange","SideNavigationSubItem","exact","strict","path","Input","Icon","name","handleSearch","Boolean","hostname","match","ReactDOM","render","document","getElementById","WebFont","load","google","families","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b4c49b2.chunk.js","sourcesContent":["import {\r\n  ThemeProvider,\r\n  Timeline,\r\n  TimelineItem,\r\n  AnalyticalCardHeader,\r\n  Card,\r\n  MessageStrip,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  Label,\r\n} from \"@ui5/webcomponents-react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Asset.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { GoogleMap, useJsApiLoader } from \"@react-google-maps/api\";\r\nimport { getTokenId } from \"../App\";\r\nimport addrMapping from \"../addrMapping.json\";\r\n\r\nlet assetipfs;\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"400px\",\r\n};\r\n\r\nconst center = {\r\n  lat: 52.520008,\r\n  lng: 13.404954,\r\n};\r\n\r\nasync function getLogs_mint() {\r\n  const transMinting = (\r\n    await axios.get(\r\n      'https://api.polygonscan.com/api?module=logs&action=getLogs&fromBlock=17107829&toBlock=\"latest\"&address=0xe939789E151608D7442E2e6Ff4ea4E2eaf314cF3&topic0=0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62&6topic0_2_opr=and&topic2=0x0000000000000000000000000000000000000000000000000000000000000000&apikey=MPENGZWJ5EVWFGKIB4WDEG6NX2YNH8XINQ'\r\n    )\r\n  ).data.result;\r\n  const id = await getTokenId(assetipfs).then((id) =>\r\n    (\r\n      \"000000000000000000000000000000000000000000000000000000000000000000\" +\r\n      id.toString(16)\r\n    ).substr(-64)\r\n  );\r\n  let index;\r\n  for (let i in transMinting) {\r\n    index = transMinting[i].data.substr(-128).substr(0, 64) === id ? i : index;\r\n  }\r\n  const json = {\r\n    DATE: new Date(\r\n      parseInt(await (await transMinting[index]).timeStamp) * 1000\r\n    ).toLocaleString(\"de-DE\"),\r\n    ADDRESS: \"0x\" + (await transMinting[index].topics[1]).substr(-40),\r\n  };\r\n  return json;\r\n}\r\n\r\nasync function getLogs_transfer() {\r\n  const transMinting = (\r\n    await axios.get(\r\n      \"https://api.polygonscan.com/api?module=logs&action=getLogs&fromBlock=17107829&toBlock=%22latest%22&address=0xe939789E151608D7442E2e6Ff4ea4E2eaf314cF3&topic0=0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62&apikey=MPENGZWJ5EVWFGKIB4WDEG6NX2YNH8XINQ\"\r\n    )\r\n  ).data.result;\r\n  const id = await getTokenId(assetipfs).then((id) =>\r\n    (\r\n      \"000000000000000000000000000000000000000000000000000000000000000000\" +\r\n      id.toString(16)\r\n    ).substr(-64)\r\n  );\r\n  let index;\r\n  let json = [];\r\n  const transTransfer = transMinting.filter(\r\n    (asset) => asset.topics[1] === asset.topics[2]\r\n  );\r\n  for (let i in transTransfer) {\r\n    index =\r\n      transTransfer[i].data.substr(-128).substr(0, 64) === id\r\n        ? json.push({\r\n            FROM: \"0x\" + (await transTransfer[i].topics[2]).substr(-40),\r\n            TO: \"0x\" + (await transTransfer[i].topics[3]).substr(-40),\r\n            DATE: new Date(\r\n              parseInt(await (await transTransfer[i]).timeStamp) * 1000\r\n            ).toLocaleString(\"de-DE\"),\r\n          })\r\n        : index;\r\n  }\r\n  return json;\r\n}\r\n\r\nasync function getAsset() {\r\n  const url = window.location.href;\r\n  assetipfs = url.split(\"Qm\")[1];\r\n  if (typeof assetipfs == \"undefined\") {\r\n    assetipfs = \"bafybei\" + url.split(\"bafybei\")[1];\r\n  } else {\r\n    assetipfs = \"Qm\" + url.split(\"Qm\")[1];\r\n  }\r\n\r\n  if (assetipfs === \"bafybeiundefined\") {\r\n    window.location.assign(\"/#/error\");\r\n  } else {\r\n    const json = JSON.stringify(\r\n      await (\r\n        await axios.get(\"https://ipfs.io/ipfs/\" + assetipfs)\r\n      ).data\r\n    );\r\n    return json;\r\n  }\r\n}\r\n\r\nfunction timelineGetter(item, x, fromtodate) {\r\n  try {\r\n    if (fromtodate === \"FROM\") {\r\n      return item[x].FROM;\r\n    } else if (fromtodate === \"TO\") {\r\n      return item[x].TO;\r\n    } else if (fromtodate === \"DATE\") {\r\n      return item[x].DATE;\r\n    } else {\r\n      return false;\r\n    }\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [asset, setAsset] = useState({});\r\n  const [ipfsID, setIpfsID] = useState(\"\");\r\n  const [timer, setTimer] = useState(false);\r\n  const [coor, setCoor] = useState(center);\r\n  const [cevent, setCevent] = useState();\r\n  const [ceventTrans, setCeventTrans] = useState();\r\n  const [details, setDetails] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getAsset().then((data) => {\r\n      setAsset(JSON.parse(data));\r\n      getTokenId(assetipfs).then((id) => setIpfsID(id));\r\n      getLogs_mint().then((d) => setCevent(d));\r\n      getLogs_transfer().then((d) => {\r\n        setCeventTrans(d);\r\n      });\r\n    });\r\n    const timer = setTimeout(() => {\r\n      setTimer(true);\r\n      return () => clearTimeout(timer);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyAl6TD_O5moyjzy5vwbo8rTp7c_AKPG2j4\",\r\n    mapIds: [\"5214ffbf666c864f\"],\r\n  });\r\n\r\n  return isLoaded && asset !== \"\" && timer && cevent ? (\r\n    <ThemeProvider>\r\n      <div style={{ \"background-color\": \"#FBFBFB\" }}>\r\n        <p />\r\n        <MessageStrip\r\n          design='Positive'\r\n          hideCloseButton='true'\r\n          className='onlyT'\r\n        >\r\n          Der Apfel ist verifiziert!\r\n        </MessageStrip>\r\n      </div>\r\n      <div className='Asset'>\r\n        <Card\r\n          className='onlyT'\r\n          header={\r\n            <AnalyticalCardHeader\r\n              className='onlyT'\r\n              arrowIndicator='Down'\r\n              counter={asset[\"be-nr\"]}\r\n              counterState='Success'\r\n              target={asset.lat}\r\n              deviation={asset.long}\r\n              description='Details'\r\n              indicatorState='Success'\r\n              subtitleText='CO2 Fußabdruck'\r\n              titleText='Bio - Rewena'\r\n              unit='g'\r\n              value={asset.co2}\r\n              onClick={() => setDetails(!details)}\r\n            />\r\n          }\r\n        >\r\n          <Card className='onlyT' style={{ display: details ? \"\" : \"none\" }}>\r\n            <Table>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <Label>Parameter X</Label>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Label>{asset[\"be-nr\"]}</Label>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <Label>Parameter Y</Label>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Label>{asset[\"be-nr\"]}</Label>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <Label>Parameter Z</Label>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Label>{asset[\"be-nr\"]}</Label>\r\n                </TableCell>\r\n              </TableRow>\r\n            </Table>\r\n          </Card>\r\n          <img\r\n            alt='MagentaDAO'\r\n            mdxtype='img'\r\n            originaltype='img'\r\n            src={`data:image/jpg;base64,${asset.image}`}\r\n            width='100%'\r\n            height='100%'\r\n          />\r\n        </Card>\r\n\r\n        <GoogleMap mapContainerStyle={containerStyle} center={coor} zoom={15}>\r\n          {/* Child components, such as markers, info windows, etc. */}\r\n          <></>\r\n        </GoogleMap>\r\n        <Timeline className='onlyT' slot='' tooltip=''>\r\n          <TimelineItem\r\n            className='onlyT'\r\n            icon='journey-change'\r\n            titleText='Apfel Token wurde versendet'\r\n            subtitleText={timelineGetter(ceventTrans, 10, \"DATE\")}\r\n            style={{ display: details ? \"\" : \"none\" }}\r\n          >\r\n            Versendet von\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 10, \"FROM\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 10, \"FROM\")]}{\" \"}\r\n            </a>\r\n            {}zu{}\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 10, \"TO\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 10, \"TO\")]}{\" \"}\r\n            </a>\r\n          </TimelineItem>\r\n          <TimelineItem\r\n            icon='journey-change'\r\n            titleText='Apfel Token wurde versendet'\r\n            subtitleText={timelineGetter(ceventTrans, 9, \"DATE\")}\r\n            style={{\r\n              display: timelineGetter(ceventTrans, 9, \"FROM\") ? \"\" : \"none\",\r\n            }}\r\n          >\r\n            Versendet von\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 9, \"FROM\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 9, \"FROM\")]}{\" \"}\r\n            </a>\r\n            {}zu{}\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 9, \"TO\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 9, \"TO\")]}{\" \"}\r\n            </a>\r\n          </TimelineItem>\r\n          <TimelineItem\r\n            icon='journey-change'\r\n            titleText='Apfel Token wurde versendet'\r\n            subtitleText={timelineGetter(ceventTrans, 8, \"DATE\")}\r\n            style={{\r\n              display: timelineGetter(ceventTrans, 8, \"FROM\") ? \"\" : \"none\",\r\n            }}\r\n          >\r\n            Versendet von\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 8, \"FROM\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 8, \"FROM\")]}{\" \"}\r\n            </a>\r\n            {}zu{}\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 8, \"TO\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 8, \"TO\")]}{\" \"}\r\n            </a>\r\n          </TimelineItem>\r\n          <TimelineItem\r\n            icon='journey-change'\r\n            titleText='Apfel Token wurde versendet'\r\n            subtitleText={timelineGetter(ceventTrans, 7, \"DATE\")}\r\n            style={{\r\n              display: timelineGetter(ceventTrans, 7, \"FROM\") ? \"\" : \"none\",\r\n            }}\r\n          >\r\n            Versendet von\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 7, \"FROM\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 7, \"FROM\")]}{\" \"}\r\n            </a>\r\n            {}zu{}\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 7, \"TO\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 7, \"TO\")]}{\" \"}\r\n            </a>\r\n          </TimelineItem>\r\n          <TimelineItem\r\n            icon='journey-change'\r\n            titleText='Apfel Token wurde versendet'\r\n            subtitleText={timelineGetter(ceventTrans, 6, \"DATE\")}\r\n            style={{\r\n              display: timelineGetter(ceventTrans, 6, \"FROM\") ? \"\" : \"none\",\r\n            }}\r\n          >\r\n            Versendet von\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 6, \"FROM\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 6, \"FROM\")]}{\" \"}\r\n            </a>\r\n            {}zu{}\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 6, \"TO\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 6, \"TO\")]}{\" \"}\r\n            </a>\r\n          </TimelineItem>\r\n          <TimelineItem\r\n            icon='journey-change'\r\n            titleText='Apfel Token wurde versendet'\r\n            subtitleText={timelineGetter(ceventTrans, 5, \"DATE\")}\r\n            style={{\r\n              display: timelineGetter(ceventTrans, 5, \"FROM\") ? \"\" : \"none\",\r\n            }}\r\n          >\r\n            Versendet von\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 5, \"FROM\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 5, \"FROM\")]}{\" \"}\r\n            </a>\r\n            {}zu{}\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 5, \"TO\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 5, \"TO\")]}{\" \"}\r\n            </a>\r\n          </TimelineItem>\r\n          <TimelineItem\r\n            icon='journey-change'\r\n            titleText='Apfel Token wurde versendet'\r\n            subtitleText={timelineGetter(ceventTrans, 4, \"DATE\")}\r\n            style={{\r\n              display: timelineGetter(ceventTrans, 4, \"FROM\") ? \"\" : \"none\",\r\n            }}\r\n          >\r\n            Versendet von\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 4, \"FROM\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 4, \"FROM\")]}{\" \"}\r\n            </a>\r\n            {}zu{}\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 4, \"TO\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 4, \"TO\")]}{\" \"}\r\n            </a>\r\n          </TimelineItem>\r\n          <TimelineItem\r\n            icon='journey-change'\r\n            titleText='Apfel Token wurde versendet'\r\n            subtitleText={timelineGetter(ceventTrans, 3, \"DATE\")}\r\n            style={{\r\n              display: timelineGetter(ceventTrans, 3, \"FROM\") ? \"\" : \"none\",\r\n            }}\r\n          >\r\n            Versendet von\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 3, \"FROM\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 3, \"FROM\")]}{\" \"}\r\n            </a>\r\n            {}zu{}\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 3, \"TO\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 3, \"TO\")]}{\" \"}\r\n            </a>\r\n          </TimelineItem>\r\n          <TimelineItem\r\n            icon='journey-change'\r\n            titleText='Apfel Token wurde versendet'\r\n            subtitleText={timelineGetter(ceventTrans, 2, \"DATE\")}\r\n            style={{\r\n              display: timelineGetter(ceventTrans, 2, \"FROM\") ? \"\" : \"none\",\r\n            }}\r\n          >\r\n            Versendet von\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 2, \"FROM\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 2, \"FROM\")]}{\" \"}\r\n            </a>\r\n            {}zu{}\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 2, \"TO\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 2, \"TO\")]}{\" \"}\r\n            </a>\r\n          </TimelineItem>\r\n\r\n          <TimelineItem\r\n            icon='journey-change'\r\n            titleText='Apfel Token wurde versendet'\r\n            subtitleText={timelineGetter(ceventTrans, 1, \"DATE\")}\r\n            style={{\r\n              display: timelineGetter(ceventTrans, 1, \"FROM\") ? \"\" : \"none\",\r\n            }}\r\n          >\r\n            Versendet von\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 1, \"FROM\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 1, \"FROM\")]}{\" \"}\r\n            </a>\r\n            {}zu{}\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 1, \"TO\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 1, \"TO\")]}{\" \"}\r\n            </a>\r\n          </TimelineItem>\r\n\r\n          <TimelineItem\r\n            icon='journey-change'\r\n            titleText='Apfel Token wurde versendet'\r\n            subtitleText={timelineGetter(ceventTrans, 0, \"DATE\")}\r\n            style={{\r\n              display: timelineGetter(ceventTrans, 0, \"FROM\") ? \"\" : \"none\",\r\n            }}\r\n          >\r\n            Versendet von\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 0, \"FROM\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 0, \"FROM\")]}{\" \"}\r\n            </a>\r\n            {}zu{}\r\n            <a\r\n              href={\r\n                \"https://polygonscan.com/address/\" +\r\n                timelineGetter(ceventTrans, 0, \"TO\")\r\n              }\r\n            >\r\n              {\" \"}\r\n              {addrMapping[timelineGetter(ceventTrans, 0, \"TO\")]}{\" \"}\r\n            </a>\r\n          </TimelineItem>\r\n          <TimelineItem\r\n            className='onlyT'\r\n            icon='create'\r\n            titleText='Apfel Token wurde erstellt'\r\n            subtitleText={cevent.DATE}\r\n          >\r\n            Erstellt von{\" \"}\r\n            <a href={\"https://polygonscan.com/address/\" + cevent.ADDRESS}>\r\n              {addrMapping[cevent.ADDRESS]}\r\n            </a>\r\n          </TimelineItem>\r\n        </Timeline>\r\n        <text className='Text'>War das hilfreich?</text>\r\n        <br />\r\n        <a href='mailto:magentadao@t-systems.com'>\r\n          <img\r\n            alt='upvote'\r\n            mdxtype='img'\r\n            originaltype='img'\r\n            src='../tu.png'\r\n            width='50px'\r\n            height='50px'\r\n          />{\" \"}\r\n        </a>\r\n        <a href='mailto:magentadao@t-systems.com'>\r\n          <img\r\n            alt='downvote'\r\n            mdxtype='img'\r\n            originaltype='img'\r\n            src='../td.png'\r\n            width='50px'\r\n            height='50px'\r\n          />{\" \"}\r\n        </a>\r\n      </div>\r\n      <div className='Footer'>\r\n        <a\r\n          href={\r\n            \"https://opensea.io/assets/matic/0xe939789E151608D7442E2e6Ff4ea4E2eaf314cF3/\" +\r\n            ipfsID\r\n          }\r\n          className='FooterText'\r\n        >\r\n          View on OpenSea.io\r\n        </a>\r\n        <br />\r\n        <a href={\"https://ipfs.io/ipfs/\" + assetipfs} className='FooterText'>\r\n          View metadata on IPFS\r\n        </a>\r\n        <br />\r\n      </div>\r\n    </ThemeProvider>\r\n  ) : (\r\n    <div className='Asset'>\r\n      {\" \"}\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>{\" \"}\r\n      <Loader\r\n        type='Grid'\r\n        color='#354A5F'\r\n        height={100}\r\n        width={100}\r\n        timeout={8000}\r\n      />\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport QrReader from \"react-qr-reader\";\r\nclass QR extends Component {\r\n  state = {\r\n    result: \"No result\",\r\n  };\r\n\r\n  handleScan = (data) => {\r\n    if (data) {\r\n      this.setState({\r\n        result: data,\r\n      });\r\n      window.location.assign(\"/#/asset/\" + data);\r\n    }\r\n  };\r\n  handleError = (err) => {\r\n    console.error(err);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <QrReader\r\n          delay={300}\r\n          onError={this.handleError}\r\n          onScan={this.handleScan}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n        <p>{this.state.result}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default QR;\r\n","import React from \"react\";\r\nimport \"./Error.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <img\r\n        alt=\"404\"\r\n        mdxType=\"img\"\r\n        originalType=\"img\"\r\n        src=\"../404.png\"\r\n        width=\"300px\"\r\n        height=\"450px\"\r\n      />\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br> <br></br>\r\n      <br></br>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  ThemeProvider,\r\n} from \"@ui5/webcomponents-react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Account.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Blockies from \"react-blockies\";\r\n\r\nconst center = {\r\n  lat: 52.520008,\r\n  lng: 13.404954,\r\n};\r\n\r\nfunction App() {\r\n  const [asset, setAsset] = useState({});\r\n  const [ipfsID, setIpfsID] = useState(\"\");\r\n  const [timer, setTimer] = useState(false);\r\n  const [coor, setCoor] = useState(center);\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <div className=\"Account\">\r\n        <br></br>\r\n        <br></br>\r\n        <Blockies\r\n          seed={\"0x\" + (window.location.href).split('0x')[1]}\r\n          size={15}\r\n          scale={8}\r\n          color=\"#dfe\"\r\n          bgColor=\"#ffe\"\r\n          spotColor=\"#abc\"\r\n        />\r\n        <h6>{\"0x\" + (window.location.href).split('0x')[1]}</h6>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  ShellBar,\r\n  ThemeProvider,\r\n  Input,\r\n  Avatar,\r\n  SideNavigation,\r\n  SideNavigationItem,\r\n  SideNavigationSubItem,\r\n  Icon,\r\n} from \"@ui5/webcomponents-react\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport AllIcons from \"@ui5/webcomponents-icons/dist/AllIcons.js\";\r\nimport React, { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport \"./App.css\";\r\nimport { Route, HashRouter } from \"react-router-dom\";\r\nimport Asset from \"./pages/Asset\";\r\nimport QR from \"./pages/QR\";\r\nimport Error from \"./pages/Error\";\r\nimport Account from \"./pages/Account\";\r\nimport abi from \"./abi.json\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nlet provider = null;\r\nlet signer = null;\r\nlet address = null;\r\nlet roProvidernoUser = new ethers.providers.JsonRpcProvider(\r\n  \"https://polygon-mainnet.infura.io/v3/d8e7160dc78d48dba6ca40b11fdf1cd5\" ||\r\n    \"https://rpc-mainnet.matic.network\"\r\n);\r\nlet magentaDAO = new ethers.Contract(\r\n  \"0xe939789E151608D7442E2e6Ff4ea4E2eaf314cF3\",\r\n  abi,\r\n  roProvidernoUser\r\n);\r\nconst roProvider = new WalletConnectProvider({\r\n  rpc: {\r\n    137: \"https://polygon-mainnet.infura.io/v3/d8e7160dc78d48dba6ca40b11fdf1cd5\",\r\n  },\r\n});\r\n\r\nexport async function ethersConnect() {\r\n  try {\r\n    if (isMobile) {\r\n      await roProvider.enable();\r\n      provider = new ethers.providers.Web3Provider(roProvider);\r\n    } else {\r\n      provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n      await provider.send(\"eth_requestAccounts\", []);\r\n    }\r\n\r\n    //[provider.getBlockNumber().then((b) => b - 10000),provider.getBlockNumber().then((b) => b )]\r\n\r\n    signer = provider.getSigner();\r\n    address = await signer.getAddress();\r\n    magentaDAO = new ethers.Contract(\r\n      \"0xe939789E151608D7442E2e6Ff4ea4E2eaf314cF3\",\r\n      abi,\r\n      signer\r\n    );\r\n\r\n    //  let filter = magentaDAO.filters.TransferSingle();\r\n    // console.log(filter)\r\n    // console.log(await magentaDAO.filter.TransferSingle());\r\n    // console.log(await magentaDAO.queryFilter(filter, 17862525 , 17862925));\r\n\r\n    return await signer.getAddress();\r\n  } catch (error) {\r\n    //alert(\"Please install Metamask!\")\r\n    console.log(\"e :\" + error);\r\n\r\n    return \"Read only\";\r\n  }\r\n}\r\n\r\nexport async function getTokenId(ipfsId) {\r\n  try {\r\n    ipfsId = ipfsId.split(\"/\")[0];\r\n    const rslt = magentaDAO.getTokenId(ipfsId).then((result) => {\r\n      return result.toNumber();\r\n    });\r\n    return rslt;\r\n  } catch {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction handleSearch(value) {\r\n  window.location.assign(\"/#/asset/\" + value);\r\n}\r\n\r\nfunction handleAccount(value) {\r\n  window.location.assign(\"/#/account/\" + address);\r\n}\r\n\r\nfunction handleQR() {\r\n  window.location.assign(\"/#/qr\");\r\n}\r\n\r\nfunction handleHome() {\r\n  window.location.assign(\"/#/\");\r\n}\r\n\r\nfunction App() {\r\n  const [value, setValue] = useState(\"\");\r\n  const [userAddress, setuserAddress] = useState(\"Connect Wallet\");\r\n  const [menu, setMenu] = useState(\"none\");\r\n  const [profile, setProfile] = useState(false);\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <HashRouter>\r\n        <ShellBar\r\n          logo={\r\n            <img\r\n              alt=\"MagentaDAO\"\r\n              mdxtype=\"img\"\r\n              originaltype=\"img\"\r\n              src=\"../MagentaDAO.png\"\r\n            />\r\n          }\r\n          onLogoClick={() => handleHome()}\r\n          onMenuItemClick={function noRefCheck() {}}\r\n          style={{ overflow: \"scroll\" }}\r\n          className=\"Shell\"\r\n          onProfileClick={() => setMenu(\"block\")}\r\n          profile={\r\n            <Avatar\r\n              icon=\"menu\"\r\n              colorScheme=\"Accent10\"\r\n              size=\"XS\"\r\n              shape=\"Square\"\r\n            ></Avatar>\r\n          }\r\n        ></ShellBar>\r\n        <br></br>\r\n        <br></br>\r\n        <div className=\"Menu\" style={{ display: menu }}>\r\n          <SideNavigation\r\n            className=\"\"\r\n            fixedItems={\r\n              <>\r\n                <SideNavigationItem icon=\"information\" text=\"Impressum\" />\r\n              </>\r\n            }\r\n            onSelectionChange={function noRefCheck() {}}\r\n            slot=\"\"\r\n            style={{}}\r\n            tooltip=\"\"\r\n          >\r\n            <SideNavigationItem\r\n              icon=\"nav-back\"\r\n              text=\"Back\"\r\n              onClick={() => setMenu(\"none\")}\r\n            />\r\n            <SideNavigationItem\r\n              className=\"\"\r\n              icon=\"group\"\r\n              onSelectionChange={function noRefCheck() {}}\r\n              onClick={() =>\r\n                ethersConnect().then((a) => {\r\n                  setuserAddress(a.substring(0, 6) + \"...\" + a.slice(-4));\r\n                  setProfile(!profile);\r\n                })\r\n              }\r\n              onChange={(e) => setuserAddress(e.target.userAddress)}\r\n              text={userAddress}\r\n              tooltip={userAddress}\r\n            >\r\n              <SideNavigationSubItem\r\n                text=\"Account\"\r\n                icon=\"customer\"\r\n                onClick={() => {\r\n                  handleAccount();\r\n                  setMenu(\"none\");\r\n                }}\r\n              />\r\n            </SideNavigationItem>\r\n          </SideNavigation>\r\n        </div>\r\n        <Route exact strict path=\"/\">\r\n          <div className=\"App\">\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <div className=\"Scan\">\r\n              <img\r\n                alt=\"click\"\r\n                mdxtype=\"img\"\r\n                originaltype=\"img\"\r\n                src=\"../button.png\"\r\n                width=\"200px\"\r\n                height=\"200px\"\r\n                onClick={() => handleQR()}\r\n              />\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"Search\">\r\n              <Input\r\n                onChange={(e) => setValue(e.target.value)}\r\n                style={{}}\r\n                type=\"Text\"\r\n                icon={\r\n                  <Icon name=\"search\" onClick={() => handleSearch(value)} />\r\n                }\r\n              />\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n          </div>\r\n        </Route>\r\n\r\n        <Route path=\"/asset\">\r\n          <Asset />\r\n        </Route>\r\n        <Route path=\"/qr\">\r\n          <QR />\r\n        </Route>\r\n        <Route path=\"/error\">\r\n          <Error />\r\n        </Route>\r\n        <Route path=\"/account\">\r\n          <Account />\r\n        </Route>\r\n      </HashRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import '@ui5/webcomponents/dist/Assets.js';\nimport '@ui5/webcomponents-fiori/dist/Assets.js';\nimport '@ui5/webcomponents-react/dist/Assets';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nWebFont.load({\n  google: {\n    families: ['Josefin Sans:200', 'sans-serif']\n  }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}